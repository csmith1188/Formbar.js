<%- include('../partials/header_content') %>
<%- include('../partials/sockets') %>
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <style>
        #otherText {
            margin-top: 1rem;
            margin-bottom: 1rem;
        }
        #links {
            display: grid;
            width: 30%;
            margin: auto;
            margin-top: 10px;
            grid-template-columns: repeat(3, 1fr);
            align-items: center;
            justify-content: center;
            flex-wrap: wrap;
            flex-direction: column;
            gap: 10px;
        }
        #links:empty::before {
            content: "No links yet.";
            font-size: 18px;
        }

        .linkButton {
            justify-content: left;
            padding: 5px 20px;
        }

        .linkButton img {
            margin-right: auto;
        }
    </style>
</head>

<body>
<%- include('../partials/formbar_header') %>
<h1 class="headerText">Class Links</h1>
<div id="links">
</div>

<%- include('../partials/body_content') %>
</body>

</html>

<script type="text/javascript">
    const linksDiv = document.getElementById('links')
    const ensureAbsoluteUrl = (url) => (/^https?:\/\//i.test(url) ? url : `https://${url}`)

    fetch(`/api/room/${currentUser.activeClass}/links`, {
        headers: {
            'Content-Type': 'application/json',
            'API': currentUser.API
        }
    }).then(res => res.json()).then((links) => {
        linksDiv.innerHTML = ''

        if (!Array.isArray(links) || links.length === 0) {
            linksDiv.innerHTML = '<p style="font-size: 18px;">No links provided for this classroom.</p>'
            return
        }

        for (const item of links) {
            const a = document.createElement('a')
            a.className = 'quickButton revampButton linkButton'
            a.href = ensureAbsoluteUrl(item.url)
            a.target = '_blank'
            a.rel = 'noopener noreferrer'
            a.innerText = item.name
            const favicon = document.createElement('img')
            favicon.src = `/links/getLinkFavicon?url=${(new URL(ensureAbsoluteUrl('https://www.google.com/s2/favicons?domain=' + item.url + '?sz=64')))}`
            a.prepend(favicon)
            favicon.width = 24;
            favicon.height = 24;

            // Show default on error
            favicon.onerror = () => {
                favicon.src = '/img/favicon.png'
            }
        
            favicon.onload = () => {
                const canvas = document.createElement('canvas');
                const context = canvas.getContext('2d');
                canvas.width = favicon.naturalWidth;
                canvas.height = favicon.naturalHeight;

                // Draw the image onto the canvas
                context.drawImage(favicon, 0, 0);

                // Get the image data
                const imageData = context.getImageData(0, 0, canvas.width, canvas.height);
                const data = imageData.data;

                // Calculate the dominant color
                let r = 0, g = 0, b = 0, total = 0;
                for (let i = 0; i < data.length; i += 4) {
                    r += data[i];     // Red
                    g += data[i + 1]; // Green
                    b += data[i + 2]; // Blue
                    total++;
                }
                r = Math.floor(r / total);
                g = Math.floor(g / total);
                b = Math.floor(b / total);

                // Use the dominant color (e.g., set as background color)
                a.style.backgroundColor = `rgb(${r}, ${g}, ${b})`;

                if((r*0.299 + g*0.587 + b*0.114) > 186){
                    a.style.color = 'black !important';
                } else {
                    a.style.color = 'white';
                }
            };

            linksDiv.append(a)
        }
    }).catch(() => {
        linksDiv.innerHTML = '<p style="font-size: 18px;">Failed to load links.</p>'
    });

    // socket.emit('pluginUpdate')
    // socket.on('pluginUpdate', (plugins) => {
    //     let br = document.createElement('br')
    //     linksDiv.innerHTML = ''
    //
    //     if (plugins.length == 0) {
    //         linksDiv.innerHTML = '<p style="font-size: 18px;">No links provided for this classroom.</p>'
    //         return
    //     }
    //
    //     for (const plugin of plugins) {
    //         const link = document.createElement('a')
    //         link.className = 'quickButton'
    //         link.href = plugin.url
    //         link.target = '_blank'
    //         link.innerText = plugin.name
    //         linksDiv.append(link)
    //         linksDiv.append(br.cloneNode(true))
    //     }
    // })
</script>
<%- include('../partials/footer_content') %>